#include<bits/stdc++.h>
using namespace std;
//#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

#define ll long long
#define fast ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define test int t; cin>>t; while(t--)
#define pb push_back
#define mp(a,b) make_pair(a,b)
#define f0(i,n) for( ll i = 0; i < ( n ); i ++)
#define f1(i,n) for(i = 1; i <= ( n ); i ++)
#define f(i,m,n) for(auto i = ( m ); i <= ( n ); i ++)
#define nl cout<<"\n"
#define  mod 1000000007
#define fir first
#define sec second
#define all(a) a.begin(),a.end()
#define rall(v) v.rbegin(), v.rend()
#define SZ(x) ((ll)x.size())
#define mem(a, b) memset(a, b, sizeof(a));
#define make_graph(k) int x,y; f0(i,k){cin>>x>>y; adj[x].pb(y); adj[y].pb(x);}
#define dekh cout<<"dekh"

#define o_set tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update>
#define o_setpll tree<pair<ll,ll>, null_type, less<pair<ll,ll>>, rb_tree_tag, tree_order_statistics_node_update>
typedef vector<ll> vl;

ll INF=1e18;


ll Pow(ll a, ll b, ll m){
    if(b==0)return 1;
    if(b%2==0){
        ll x = a*a;
        x%=m;
        return Pow(x,b/2,m);
    }
    return (a*Pow(a,b-1,m))%m;
}

ll binExp(ll x,ll n)
{
    ll res=1;
    while(n)
    {
        if(n&1) res=(res*x)%mod;
        x=(x*x)%mod;
        n>>=1;
    }
    return res;
}

ll modInv(ll i) {return binExp(i,mod-2);}

vector<ll>adj[300005];
 ll vis[300005]={0};
ll tin[10],tout[10];
ll ti=1;

void dfs(ll node )
{
        vis[node]=1;
        tin[node]=ti++;

        for(auto child : adj[node])
        {
            if(!vis[child])dfs(child);
        }
        tout[node]=ti-1;
}



bool isp(ll n)
{
    for(ll i=2;i*i<=n;i++)
    {
        if(n%i==0)return false;
    }
    return true;
}
ll nod(ll n)
{
    ll cnt=0;
    while(n)
    {   cnt+=n%10;
        //cnt++;
        n/=10;

    }return cnt;
}

//  mujse nai ho rhi coding

// from editorial

int main()
{
    fast
    test
    {
        ll n;
        cin>>n;
        map<pair<ll,ll>,ll>mp;
        f0(i,n)
        {
            ll a,b,x,y;
            cin>>a>>b>>x>>y;
            ll xa = x-a, yb=y-b;
            if(xa==0)yb/=abs(yb);
            else if(yb==0)xa/=abs(xa);
            else
            { ll xc=xa;
                xa = xa/__gcd(abs(xa),abs(yb));
                yb = yb/__gcd(abs(xc),abs(yb));
            }

            mp[{xa,yb}]++;

        }ll ans=0;
        for(auto x :mp)
        {
            ll a = x.fir.fir, b= x.fir.sec;
            ans+=x.sec*( mp[{-a,-b}] );
            mp[{a,b}]=0;
        }
        cout<<ans;nl;
    }

}




