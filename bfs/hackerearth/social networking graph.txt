#include<bits/stdc++.h>
using namespace std;
//#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

#define ll long long
#define fast ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define test int t; cin>>t; while(t--)
#define pb push_back
#define mp(a,b) make_pair(a,b)
#define f0(i,n) for( ll i = 0; i < ( n ); i ++)
#define f1(i,n) for(i = 1; i <= ( n ); i ++)
#define f(i,m,n) for(auto i = ( m ); i <= ( n ); i ++)
#define nl cout<<"\n"
#define  mod 1000000007
#define fi first
#define se second
#define all(a) a.begin(),a.end()
#define rall(v) v.rbegin(), v.rend()
#define SZ(x) ((ll)x.size())
#define mem(a, b) memset(a, b, sizeof(a));
#define make_graph(k) int x,y; f0(i,k){cin>>x>>y; adj[x].pb(y); adj[y].pb(x);}
#define dekh cout<<"dekh"

#define o_set tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update>
#define o_setpll tree<pair<ll,ll>, null_type, less<pair<ll,ll>>, rb_tree_tag, tree_order_statistics_node_update>
typedef vector<ll> vl;



/*
ll Pow(ll a, ll b, ll m){
    if(b==0)return 1;
    if(b%2==0){
        ll x = a*a;
        x%=m;
        return Pow(x,b/2,m);
    }
    return (a*Pow(a,b-1,m))%m;
}*/

vector<ll>adj[1000005];
 ll vis[1000005]={0};


/*
void dfs(ll x)
{
   // lvarr[x] = lvl;
    vis[x]=1; cc[x]=cur;

   // ll cursize = 1;
    for(auto child : adj[x])
    {   if(!vis[child])
         {
             dfs(child);
         }

    }
         //subtree[x] = cursize;
        //return cursize;
}
*/
ll lvl[1000005];
ll dis[1000005];
void bfs(ll src)
{
    queue<ll>q;
    q.push(src);
    vis[src]=1;
    dis[src]=0;

    while(!q.empty())
    {
        ll curr = q.front();
        q.pop();
        for(auto child : adj[curr])
        {
            if(!vis[child]){
            q.push(child);
            vis[child]=1;
            dis[child]=dis[curr]+1;
            lvl[dis[child]]++;}
        }

    }
}

int main()
{
    fast
    ll n,m;
    cin>>n>>m;
    make_graph(m);
    ll q;
    cin>>q;
    while(q--)
    {
        ll src,d;
        cin>>src>>d;
        f0(i,n+1)
        lvl[i]=0,vis[i]=0;
        bfs(src);
        cout<<lvl[d];nl;
    }

}





