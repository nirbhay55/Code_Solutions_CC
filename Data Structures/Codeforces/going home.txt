// jo code dekh raha h mera bhai meri nai ho rhi progress kahi teri bhi na ruk jaye. Koi tareeka ho to madad kere.

#include<bits/stdc++.h>
using namespace std;
//#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

#define ll long long
#define fast ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define test int t; cin>>t; while(t--)
#define pb push_back
//#define mp(a,b) make_pair(a,b)
#define f0(i,n) for( ll i = 0; i < ( n ); i ++)
#define f1(i,n) for( ll i = 1; i <= ( n ); i ++)
#define f(i,m,n) for(auto i = ( m ); i <= ( n ); i ++)
#define fr(i,m,n) for( auto i=(m);i>=(n);i--)
#define nl cout<<"\n"
#define  mod 1000000007
#define fir first
#define sec second
#define all(a) a.begin(),a.end()
#define rall(v) v.rbegin(), v.rend()
#define SZ(x) ((ll)x.size())
#define mem(a, b) memset(a, b, sizeof(a));
#define make_graph(k) int x,y; f0(i,k){cin>>x>>y; adj[x].pb(y); adj[y].pb(x);}
#define dekh cout<<"dekh"

#define o_set tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update>
#define o_setpll tree<pair<ll,ll>, null_type, less<pair<ll,ll>>, rb_tree_tag, tree_order_statistics_node_update>
typedef vector<ll> vl;

ll INF=1e18;
;


ll Pow(ll a, ll b, ll m){
    if(b==0)return 1;
    if(b%2==0){
        ll x = a*a;
        x%=m;
        return Pow(x,b/2,m);
    }
    return (a*Pow(a,b-1,m))%m;
}

bool isp(ll n)
{
    for(ll i=2;i*i<=n;i++)
    {
        if(n%i==0)return false;
    }
    return true;
}


// COMBINATION +++++++++++++++++++++++++++++++++++++++++++++++++++
/*
ll fac[200005],infac[200005];
 ll comb( ll n, ll r )
 {
     if(r>n)return 0;
     return (fac[n]%mod*infac[n-r]%mod*infac[r]%mod)%mod;
 }

 void facto()
 {     fac[0]=1;infac[0]=1;
           f(i,1,200001)
            {
                fac[i]=(fac[i-1]*i)%mod;
                infac[i]=Pow(fac[i],mod-2,mod);
            }
 }*/
 //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//  mujse nai ho rhi coding      . .

// a^b=a+b-2*(a&b)
/*
vector<ll>adj[200005];
 ll vis[100005]={0};
 ll in[100005], out[100005];
 ll timer=1;

bool dfs(ll node )
{
    //cout<<node<<" dfs1 ";nl;
        vis[node]=1;
         in[node]=timer++;
        for(auto child : adj[node])
        {
            if(vis[child]==0)
            {
                dfs(child);
            }

        }
      out[node]=timer++;
}*/
//===========================================================
/*vector<int> pf[5000005],pr;
void process_seive(){
    f(i,2,5000000){
        if(SZ(pf[i])) continue;
        pr.pb(i);
        for(int j=i;j<=5000000;j+=i){
            pf[j].pb(i);
        }
    }
}*/
//============================================================

/*
ll n,x,y,a,b;
ll vis[10][10]={0};

bool isvalid( ll x , ll y )
{
    //cout<<x<<" "<<y<<" vv "<<arr[x][y];nl;
    if( x>=0 && y>=0 && x<=7 && y<=7 && vis[x][y]==0  )return true;
    return false;
}
ll ans = INT_MAX;
ll dist[10][10]={0};
void bfs( ll a,ll b )
{
    vis[a][b]=1;
    queue<pair<ll,ll>>q;
    q.push( {a,b} );
    dist[a][b]=0;
    //cout<<a<<" "<<b;nl;
    while(!q.empty())
    {
        ll x = q.front().first;
        ll y = q.front().second;
        q.pop();
 ll        dx[]= { -2 , -2 ,-1 , -1 ,1 , 1 , 2 ,2 };
   ll     dy[]= { 1 , -1 ,2 , -2 ,2 , -2 , 1 ,-1 };
        f0(i,8)
        {
            if( isvalid( x+dx[i], y + dy[i] ) ){ dist[x +dx[i]][y+dy[i]] = dist[x][y]+1; q.push({ x+dx[i], y +dy[i] }); vis[x+dx[i]][y+dy[i]]=1; }
        }

    }

}*/

int main()
{
    fast
     //if(n &(n-1)==0) then n is a power of 2
     ll n;
     cin>>n;
     vector<pair<ll,ll>>mp(5000100);
         ll arr[n+1];
         f1(i,n)cin>>arr[i];
         ll cnt =0;

     f1(i,n)
     {
         f(j,i,n)
         {
             if(i==j)continue;
             cnt++;
             ll sum = arr[i]+arr[j];
            // cout<<sum<<" "<<mp[sum].fir<<" "<<mp[sum].sec;nl;

             if(mp[sum].fir==i || mp[sum].fir == j || mp[sum].sec==i || mp[sum].sec==j )continue;
             else if ( mp[sum].fir!=0 )
             {
                   cout<<"YES";nl;
                  cout<<mp[sum].fir<<" "<<mp[sum].sec<<" "<<i<<" "<<j;return 0;
             }

            else
            {
               mp[sum].fir=i; mp[sum].sec=j;
            }

        }

     }
     cout<<"NO";

}





