 /*                    (
                     (  ) (
                      )    )
         |||||||     (  ( (
        ( O   O )        )
 ____oOO___(_)___OOo____(
(_______________________)
           JOINT           ░█─░█ ░█▀▀▀ ▀█▀ ░█▀▀▀█ ░█▀▀▀ ░█▄─░█ ░█▀▀█ ░█▀▀▀ ░█▀▀█ ░█▀▀█ █ ░█▀▀▀█ 　 ░█▀▀█ ░█▀▀▀█ ░█▀▀▄ ░█▀▀▀
                           ░█▀▀█ ░█▀▀▀ ░█─ ─▀▀▀▄▄ ░█▀▀▀ ░█░█░█ ░█▀▀▄ ░█▀▀▀ ░█▄▄▀ ░█─▄▄ ─ ─▀▀▀▄▄ 　 ░█─── ░█──░█ ░█─░█ ░█▀▀▀
                           ░█─░█ ░█▄▄▄ ▄█▄ ░█▄▄▄█ ░█▄▄▄ ░█──▀█ ░█▄▄█ ░█▄▄▄ ░█─░█ ░█▄▄█ ─ ░█▄▄▄█ 　 ░█▄▄█ ░█▄▄▄█ ░█▄▄▀ ░█▄▄▄*/

#include<bits/stdc++.h>
using namespace std;

 // Ordered Set
/*#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> ordered_set;
#define os_find(k) find_by_order(k)
#define os_order(k) order_of_key(k)*/


typedef long long int ll;
typedef unsigned long long int ull;
typedef long double ld;
typedef vector<int> vi;
#define loop(i,a,b) for(int i=a;i<b;i++)
#define loop1(i,a,b) for(int i=a;i<=b;i++)
#define rloop(i,a,b) for(int i=a;i>b;i--)
#define rloop1(i,a,b) for(int i=a;i>=b;i--)
#define all(a) a.begin(),a.end()
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define int long long
#define ff first
#define ss second
#define ncr(n,r) fact[n]*modInv(fact[r])*modInv(fact[n-r])

#define MOD 1000000007
#define modInv(a) binExp(a,mod-2)
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define test int t;cin>>t;while(t--)
//#define a^b=a+b-2*(a&b)

//POWER FUNCTION FOR LARGE NO.
//ll M=1000000007LL,fact[100010];

ll power(ll a, ll b, ll mod){
	ll x = 1LL, y = a;
	while (b > 0LL){
		if (b%2LL){
			x = (x*y);
			if(x>mod) x%=mod;
		}
		y = (y*y);
		if(y>mod) y%=mod;
		b /= 2LL;
	}
	return x;
}
/*
EULER'S FUNCTION FOR TAKING COMBINATION OF LARGE NO.
ll mod_inv(ll n, ll mod){
	return power(n, mod-2LL, mod);
}

ll nCr(ll n, ll k, ll mod){
	return (fact[n]* ((mod_inv(fact[k],mod)*mod_inv(fact[n-k],mod))%mod) )%mod;
}
 fact[0]=1LL;
    for(ll i=1LL;i<=100005LL;i++)
    {
        fact[i]=(fact[i-1]*i)%M;

    }*/

//pass by value increases the time complexity if you continuosly pass array or string in function it will give time complexity
//___________________(⌐⊙_⊙)__________<CHAL GURU HOJA SHURU >__________(⊙_⊙⌐)______________________________________________

signed main()
{
    test{
    int n;
    cin>>n;
    int arr[n],sum=0;
    loop(i,0,n){cin>>arr[i];sum+=arr[i];}
    int s1=0,maxx1=0;
    loop(i,0,n-1){
        s1+=arr[i];
        maxx1=max(maxx1,s1);
        if(s1<0)s1=0;
    }
     int s2=0,maxx2=0;
    loop(i,1,n){
        s2+=arr[i];
        maxx2=max(maxx2,s2);
        if(s2<0)s2=0;
    }
    if(sum>max(maxx1,maxx2))cout<<"Yes"<<endl;
    else cout<<"No"<<endl;
    }

}