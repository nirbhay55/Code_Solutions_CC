#include<bits/stdc++.h>
using namespace std;
//#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

#define ll long long
#define fast ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define test int t; cin>>t; while(t--)
#define pb push_back
#define mp(a,b) make_pair(a,b)
#define f0(i,n) for( ll i = 0; i < ( n ); i ++)
#define f1(i,n) for(i = 1; i <= ( n ); i ++)
#define f(i,m,n) for(auto i = ( m ); i <= ( n ); i ++)
#define nl cout<<"\n"
#define  mod 1000000007
#define fi first
#define se second
#define all(a) a.begin(),a.end()
#define rall(v) v.rbegin(), v.rend()
#define SZ(x) ((ll)x.size())
#define mem(a, b) memset(a, b, sizeof(a));
#define make_graph(k) int x,y; f0(i,k){cin>>x>>y; adj[x].pb(y); adj[y].pb(x);}
#define dekh cout<<"dekh"

#define o_set tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update>
#define o_setpll tree<pair<ll,ll>, null_type, less<pair<ll,ll>>, rb_tree_tag, tree_order_statistics_node_update>
typedef vector<ll> vl;

ll INF=1e18;


ll Pow(ll a, ll b, ll m){
    if(b==0)return 1;
    if(b%2==0){
        ll x = a*a;
        x%=m;
        return Pow(x,b/2,m);
    }
    return (a*Pow(a,b-1,m))%m;
}
/*
vector<ll>adj[300005];
 ll vis[300005]={0};
 //ll subtree[200005]= {0};

 map<pair<ll,ll>,ll>mp;
ll ans=0;ll sum=0;

void dfs(ll node , ll par)
{
    vis[node]=1;
    //cout<<node<<" "<<par;nl;

    for(auto child : adj[node])
    {   //cout<<node<<" "<<par<<" "<<child;nl;
         if(!vis[child])
         {
             //cout<<mp[{node,child}];nl;
             sum+=mp[{node,child}];
             dfs(child, node );
         }
         else
         {
             if(child!=par && par!=-1) {
             if(mp[{node,par}]!=mp[{node,child}])
                {
                    ans=1; //cout<<mp[{node,par}]<<" "<<mp[{node,child}];nl;
                    //cout<<node<<" "<<par<<" "<<child;nl;
                }
             }
         }

    }


}

*/

bool isp(ll n)
{
    for(ll i=2;i*i<=n;i++)
    {
        if(n%i==0)return false;
    }
    return true;
}
ll nod(ll n)
{
    ll cnt=0;
    while(n)
    {   cnt+=n%10;
        //cnt++;
        n/=10;

    }return cnt;
}

vector<ll>adj[505][505];
ll vis[505][505];

int main()
{
   fast
   test{
   ll n,k;
   cin>>n>>k;
   ll arr[n+1];
   vector<pair<ll,ll>>v;
   f0(i,n+1){ll a; cin>>a; v.pb({a,i}); }
   sort(all(v));

   ll i = 0, j =i+1;
   ll total = n*k;
   while(j<=n && total!=0)
   {
       ll num = v[i].fi;
       if(v[j].fi>=(k-num))
       {
           cout<<v[i].se<<" "<<num<<" "<<v[j].se<<" "<<(k-num);nl;
           v[i].fi=0;
           v[j].fi-=(k-num);
           i++;
           total-=k;
       }
       else j++;
   }

   }


}




